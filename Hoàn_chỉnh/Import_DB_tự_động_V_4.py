import pandas as pd
import pymysql

# ============================
# C·∫§U H√åNH
# ============================
INPUT_CSV_PATH = 'cleaned_BCTC_for_db_v3_smart.csv'
TICKER = 'VIC'
QUARTER = 1
YEAR = 2025
TABLE_NAME = f"bctc_{TICKER.lower()}_q{QUARTER}_{YEAR}"

DB_HOST = 'localhost'
DB_USER = 'huyvuong'
DB_PASS = 'vuongquochuy1109@@'
DB_NAME = 'baocaotc'

# ============================
# X·ª¨ L√ù D·ªÆ LI·ªÜU V√Ä IMPORT
# ============================

def run_import():
    """H√†m ch√≠nh ƒë·ªÉ th·ª±c hi·ªán to√†n b·ªô qu√° tr√¨nh import."""
    
    try:
        df = pd.read_csv(INPUT_CSV_PATH, encoding="utf-8")
        print(f"‚úÖ ƒê√£ ƒë·ªçc th√†nh c√¥ng file '{INPUT_CSV_PATH}'.")
    except FileNotFoundError:
        print(f"‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y file t·∫°i '{INPUT_CSV_PATH}'.")
        return

    # Chuy·ªÉn ƒë·ªïi c√°c c·ªôt s·ªë, l·ªói s·∫Ω th√†nh NaT (Not a Time) -> NaN
    df['s·ªë cu·ªëi k√¨'] = pd.to_numeric(df['s·ªë cu·ªëi k√¨'], errors='coerce')
    df['s·ªë ƒë·∫ßu k√¨'] = pd.to_numeric(df['s·ªë ƒë·∫ßu k√¨'], errors='coerce')
    print("‚úÖ ƒê√£ chuy·ªÉn ƒë·ªïi c√°c c·ªôt s·ªë.")
    
    conn = None
    try:
        conn = pymysql.connect(
            host=DB_HOST, user=DB_USER, password=DB_PASS, database=DB_NAME, charset='utf8mb4'
        )
        cursor = conn.cursor()
        print("‚úÖ K·∫øt n·ªëi t·ªõi database MySQL th√†nh c√¥ng.")

        print(f"üîß Chu·∫©n b·ªã t·∫°o b·∫£ng '{TABLE_NAME}'...")
        cursor.execute(f"DROP TABLE IF EXISTS {TABLE_NAME};")
        print(f"   - ƒê√£ x√≥a b·∫£ng c≈© (n·∫øu c√≥).")

        create_table_query = f"""
        CREATE TABLE {TABLE_NAME} (
            id INT AUTO_INCREMENT PRIMARY KEY,
            ma_so VARCHAR(50),
            tai_san VARCHAR(255),
            thuyet_minh VARCHAR(100),
            so_cuoi_ky BIGINT,
            so_dau_ky BIGINT,
            ngay_nhap_lieu TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        """
        cursor.execute(create_table_query)
        print(f"   - ‚úÖ ƒê√£ t·∫°o b·∫£ng m·ªõi '{TABLE_NAME}' v·ªõi c·∫•u tr√∫c ƒë√∫ng.")

        insert_query = f"""
        INSERT INTO {TABLE_NAME} (ma_so, tai_san, thuyet_minh, so_cuoi_ky, so_dau_ky)
        VALUES (%s, %s, %s, %s, %s);
        """
        
        count = 0
        for _, row in df.iterrows():
            # ‚ú®‚ú®‚ú® S·ª¨A L·ªñI TRI·ªÜT ƒê·ªÇ ‚ú®‚ú®‚ú®
            # Thay th·∫ø t·∫•t c·∫£ c√°c gi√° tr·ªã NaN trong to√†n b·ªô d√≤ng b·∫±ng None c·ªßa Python.
            # D√πng ph∆∞∆°ng th·ª©c to_dict() ƒë·ªÉ d·ªÖ d√†ng x·ª≠ l√Ω v√† ki·ªÉm tra.
            cleaned_row = row.where(pd.notnull(row), None).to_dict()
            
            record = (
                cleaned_row['m√£ s·ªë'],
                cleaned_row['t√†i s·∫£n'],
                cleaned_row['thuy·∫øt minh'],
                # Chuy·ªÉn th√†nh int n·∫øu kh√¥ng ph·∫£i None, ƒë·ªÉ ph√π h·ª£p v·ªõi ki·ªÉu BIGINT
                int(cleaned_row['s·ªë cu·ªëi k√¨']) if cleaned_row['s·ªë cu·ªëi k√¨'] is not None else None,
                int(cleaned_row['s·ªë ƒë·∫ßu k√¨']) if cleaned_row['s·ªë ƒë·∫ßu k√¨'] is not None else None
            )

            try:
                cursor.execute(insert_query, record)
                count += 1
            except pymysql.Error as e:
                print(f"‚ùå L·ªói khi ch√®n d√≤ng: {record}")
                print(f"   ‚Üí {e}")
                
        conn.commit()
        print("-" * 30)
        print(f"üéâ ƒê√£ import th√†nh c√¥ng {count} d√≤ng v√†o b·∫£ng '{TABLE_NAME}'.")

    except pymysql.Error as e:
        print(f"‚ùå L·ªói k·∫øt n·ªëi ho·∫∑c th·ª±c thi Database: {e}")
    finally:
        if conn and conn.open:
            cursor.close()
            conn.close()
            print("‚úÖ ƒê√£ ƒë√≥ng k·∫øt n·ªëi database.")

if __name__ == '__main__':
    run_import()